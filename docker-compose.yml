services:
  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - db
    env_file:
      - .env
    working_dir: /superviso
    volumes:
      - ./templates:/superviso/templates
      - ./static:/superviso/static
    command: ["/wait-for-it.sh", "db:5432", "-t", "30", "--", "/superviso/app_superviso"]
    networks:
      - superviso_network

  db:
    image: postgres:16.4
    env_file:
      - .env
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    networks:
      - superviso_network

  backup:
    image: postgres:16.4-alpine
    volumes:
      - ./backups:/backups
      - ./scripts:/scripts:ro
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - TZ=America/Sao_Paulo
    entrypoint: [""]
    command: |
      /bin/sh -c '
        apk add --no-cache postgresql16-client
        mkdir -p /var/spool/cron/crontabs
        echo "0 3 * * * /scripts/backup.sh >> /backups/cron.log 2>&1" > /etc/crontabs/root
        crond -f -l 2
      '
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h db -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - superviso_network

networks:
  superviso_network:

volumes:
  db_data:
